version: '3.4'
services:

  mysql:
    image: mysql:8.0
    ports:
      - '0.0.0.0:${MYSQL_PORT}:3306'
    restart: always
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - data-mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'

  pgsql:
    image: postgres:13.2
    ports:
      - '0.0.0.0:${POSTGRES_PORT}:5432'
    volumes:
      - ./pgsql:/docker-entrypoint-initdb.d
      - data-pgsql:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'

  ontop:
    #image: ontop/ontop-endpoint:4.1.1-SNAPSHOT
    image: ontop/ontop-endpoint:4.1.0
    restart: unless-stopped
    environment:
      ONTOP_ONTOLOGY_FILE: /opt/ontop/input/university.ttl
      ONTOP_MAPPING_FILE: /opt/ontop/input/uni2.obda
      ONTOP_PROPERTIES_FILE: /opt/ontop/input/uni2.docker.properties
      ONTOP_CORS_ALLOWED_ORIGINS: '*'
      ONTOP_DEV_MODE: '${ONTOP_DEV_MODE}'
    ports:
      - '0.0.0.0:${ONTOP_PORT}:8080'
    volumes:
      - ./obda:/opt/ontop/input
      - ./jdbc:/opt/ontop/jdbc
    depends_on:
      - "pgsql"
#    entrypoint: [
#      "/opt/ontop/input/wait-for-it.sh",
#      "pgsql:5432",
#      "--timeout=0",
#      "--strict",
#      "--",
#      "/opt/ontop/entrypoint.sh" ]

volumes:
  data-pgsql: {}
  data-mysql: {}  
    